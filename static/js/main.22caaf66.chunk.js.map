{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","timerId","setInterval","this","date","Date","toLocaleTimeString","console","log","setState","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAFV,EAKEC,QAAwBC,aAAY,cAAU,GALhD,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAY,WACzB,IAAME,GAAO,IAAIC,MAAOC,qBAExBC,QAAQC,IAAIJ,GACZ,EAAKK,SAAS,CAAET,KAAMI,MACrB,OAbP,gCAgBE,SAAmBM,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DR,KAAKS,MAAMD,SAnBhF,kCAuBE,WACEE,cAAcV,KAAKF,WAxBvB,oBA2BE,WACE,IAAQD,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAM,UAAQ,OAAd,SACGA,QAhCT,GAA2Bc,IAAMC,WCDpBC,EAAb,4MACEjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,WAH/B,4CAME,WAAU,IAAD,OACP,EAAsClB,KAAKJ,MAAnCkB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKI,UAAU,MAAf,UACE,mDAAoBJ,KACpB,8CAEG,IACAD,GAAkB,cAAC,EAAD,CAAON,KAAMO,OAGlC,wBACEK,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAEQ,gBAAgB,KAHpC,wBASA,wBACEM,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAEQ,gBAAgB,KAHpC,wBASA,wBACEM,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAES,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,aAH/C,6BApCR,GAAyBP,IAAMC,WCN/BU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.22caaf66.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: string,\n};\n\ntype Props = {\n  name: number,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: '',\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {}, 0);\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date = new Date().toLocaleTimeString();\n      // eslint-disable-next-line\n      console.log(date);\n      this.setState({ time: date });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <span data-cy=\"time\">\n        {time}\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 100),\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{`React clock ${clockName}`}</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && <Clock name={clockName} />}\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.floor(Math.random() * 100) });\n          }}\n        >\n          Set name\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}